/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) 
    {
        List<List<Integer>> result = new ArrayList<>();
        
        if(root == null)
        {
            return result;
        }
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        boolean flag = true;
        while(!queue.isEmpty())
        {
            ArrayList<Integer> list = new ArrayList<>();
            int length = queue.size();
            for(int i = 0; i < length; i++)
            {
                TreeNode curr = queue.poll();
                if(flag)
                {
                    list.add(curr.val);
                }
                else
                {
                    list.add(0,curr.val);
                }
                if(curr.left != null) 
                    queue.add(curr.left);
                if(curr.right != null) 
                    queue.add(curr.right);
            }
            flag = !flag;
            result.add(list);
        }
        
        return result;
    }
}
