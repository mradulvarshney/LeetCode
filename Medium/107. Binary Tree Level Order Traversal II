/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public List<List<Integer>> levelOrderBottom(TreeNode root) 
    {
        List<List<Integer>> result = new ArrayList<>();
        if(root == null)
        {
            return result;
        }
        List<Integer> list = new ArrayList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        
        queue.add(root);
        queue.add(null);
        
        while(!queue.isEmpty())
        {
            TreeNode curr = queue.poll();
            if(curr == null)
            {
                result.add(0, list);
                list = new ArrayList<>();
                
                if(queue.isEmpty())
                {
                    break;
                }
                queue.add(null);
                continue;
            }
            list.add(curr.val);
            if(curr.left!=null)
            {
                queue.add(curr.left);
            }
            if(curr.right!=null)
            {
                queue.add(curr.right);
            }
        }
        
        return result;
    }
}
