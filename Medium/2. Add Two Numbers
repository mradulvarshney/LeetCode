/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) 
    {
        ListNode head = new ListNode();
        ListNode tail = head;
        int carry = 0;
        while(l1!=null || l2!=null)
        {
            if(l1==null)
            {
                ListNode ref = new ListNode();
                tail.next=ref;
                tail=ref;

                int sum =l2.val+carry;
                tail.val=sum%10;
                carry=sum/10;

                l2=l2.next;   
            }
            else if(l2==null)
            {
                ListNode ref = new ListNode();
                tail.next=ref;
                tail=ref;

                int sum =l1.val+carry;
                tail.val=sum%10;
                carry=sum/10;

                l1=l1.next;
            }
            else if(l1!=null && l2!=null)
            {
                ListNode ref = new ListNode();
                tail.next=ref;
                tail=ref;

                int sum =l1.val+l2.val+carry;
                tail.val=sum%10;
                carry=sum/10;

                l1=l1.next;
                l2=l2.next;
            }
        }
        if(carry!=0)
        {
            ListNode ref = new ListNode();
            tail.next=ref;
            tail=ref;
            
            tail.val = carry;
        }
        return head.next;
    }
}
