/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int[] nextLargerNodes(ListNode head) 
    {
        
        ArrayList<Integer> list = new ArrayList<>();
        while(head!=null)
        {
            list.add(head.val);
            head = head.next;
        }
        int arr[] = new int[list.size()];
        Stack<Integer> st = new Stack<>();
        
        for(int i=0; i<arr.length; i++)
        {
            while(!st.isEmpty() && list.get(i)>list.get(st.peek()))
            {
                int index = st.pop();
                arr[index] = list.get(i);
            }
            st.push(i);
        }
        
        while(!st.isEmpty())
        {
            int index = st.pop();
            arr[index] = 0;
        }
        
        return arr;
    }
}
