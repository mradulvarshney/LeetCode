/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public List<Integer> largestValues(TreeNode root) 
    {
        List<Integer> list = new ArrayList<>();
        if(root == null)
        {
            return list;
        }
        list.add(Integer.MIN_VALUE);
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        q.add(null);
        
        while(!q.isEmpty())
        {
            TreeNode curr = q.poll();
            
            if(curr == null)
            {
                if(q.isEmpty())
                {
                    break;
                }
                list.add(Integer.MIN_VALUE);
                q.add(null);
                continue;
            }
            
            if(list.get(list.size()-1) < curr.val)
            {
                list.remove(list.size()-1);
                list.add(curr.val);
            }
            
            if(curr.left!=null)
            {
                q.add(curr.left);
            }
            if(curr.right!=null)
            {
                q.add(curr.right);
            }
        }
        
        return list;
    }
}
