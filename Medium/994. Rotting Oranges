class Solution 
{
    public int orangesRotting(int[][] grid) 
    {
        int m = grid.length, n = m == 0 ? 0 : grid[0].length;
        Queue<int[]> q = new LinkedList<>();
        int cnt = 0;
        for(int i = 0; i < m; i++) 
        {
            for(int j = 0; j < n; j++) 
            {
                if(grid[i][j] == 2)
                    q.add(new int[]{i, j});
                else if(grid[i][j] == 1)
                    cnt++;
            }
        }
        if(cnt == 0) return 0;
        
        int min = 0;
        int[][] dir = {{0, 1}, {1,0}, {-1, 0}, {0,-1}};
        while(!q.isEmpty()) {
            int size = q.size();
            for(int i = 0; i < size; i++) 
            {
                int[] cur = q.poll();
                for(int[] d : dir) 
                {
                    int x = cur[0] + d[0], y = cur[1] + d[1];
                    if(x < 0 || y < 0 || x >= m || y >= n || grid[x][y] != 1)
                        continue;
                    grid[x][y] = 2;
                    cnt--;
                    q.add(new int[]{x, y});
                }
            }
            min++;
        }
        return cnt == 0 ? min - 1: -1;
    }
}
