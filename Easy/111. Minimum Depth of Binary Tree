/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 **/
class Solution 
{
    static int min = Integer.MAX_VALUE;
    public int minDepth(TreeNode root) 
    {
        if(root == null)
        {
            return 0;
        }
        min = Integer.MAX_VALUE;
        depth(root, 0);
        return min;
    }
    public static void depth(TreeNode node, int count)
    {
        if(node == null)
        {
            return;
        }
        if(node.left == null && node.right == null)
        {
            if(min>count)
                min = count+1;
            return;
        }
        
        depth(node.left, count+1);
        depth(node.right, count+1);
    }
}
