/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    static int first, second, t=0;
    public int findSecondMinimumValue(TreeNode root) 
    {
        first = second = Integer.MAX_VALUE;
        t=0;
        find(root);
        if(second == Integer.MAX_VALUE && t==0)
        {
            return -1;
        }
        return second;
    }
    private static void find(TreeNode node)
    {
        if(node == null)
        {
            return;
        }
        if (node.val < first)
        {
            second = first;
            first = node.val;
        }
        else if (node.val <= second && node.val != first)
        {
            t=1;
            second = node.val;
        }
        find(node.left);
        find(node.right);
    }
}
