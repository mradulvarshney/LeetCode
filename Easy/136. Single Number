class Solution {
    public int singleNumber(int[] nums) 
    {
        Arrays.sort(nums);
        ArrayList<Integer> arr = new ArrayList<>();
        int res = 0;
        int j=0;
        for(int i = 0; i<nums.length; i++)
        {
            if(!arr.contains(nums[i]))
            {
                // System.out.println("nums "+nums[i]);
                j++;
                // System.out.println("j "+j);
                if(j==2)
                {
                    res = arr.get(i-1);
                    break;
                }
                if ((j==1 && i==nums.length-1) || (j==1 && nums[i]!=nums[i+1]))
                {
                    res = nums[i];
                    break;
                }
                arr.add(nums[i]);
            }
            else
            {
                j--;
            }
        }
        return res;
    }
}


// Solving Using HashMap 


// class Solution 
// {
//     public int singleNumber(int[] nums) 
//     {
//         int res = 0;
//         HashMap<Integer, Integer> map = new HashMap<>();
//         for(int i=0; i<nums.length; i++)
//         {
//             if(map.containsKey(nums[i]))
//             {
//                 map.put(nums[i], map.get(nums[i])+1);
//             }
//             else
//             {
//                 map.put(nums[i], 1);
//             }
//         }
//         //System.out.println(map);
//         for (Map.Entry<Integer, Integer> e : map.entrySet())
//         {
//             if(e.getValue()==1)
//             {
//                 res=e.getKey();
//                 break;
//             }
//         }
//         return res;
//     }
// }
